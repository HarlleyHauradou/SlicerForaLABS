<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Measures</class>
 <widget class="qMRMLWidget" name="Measures">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>380</width>
    <height>560</height>
   </rect>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">

   <!-- Inputs -->
   <item>
    <widget class="ctkCollapsibleButton" name="inputsCollapsibleButton">
     <property name="text">
      <string>Inputs</string>
     </property>
     <layout class="QFormLayout" name="formLayout_inputs">
      <item row="0" column="0">
       <widget class="QLabel" name="labelSeg">
        <property name="text">
         <string>Segmentation:</string>
        </property>
       </widget>
      </item>
      <item row="0" column="1">
       <widget class="qMRMLNodeComboBox" name="segSelector">
        <property name="toolTip">
         <string>Pick the segmentation that contains the shell (wall) segment.</string>
        </property>
        <property name="nodeTypes">
         <stringlist notr="true">
          <string>vtkMRMLSegmentationNode</string>
         </stringlist>
        </property>
        <property name="showChildNodeTypes">
         <bool>false</bool>
        </property>
        <property name="noneEnabled">
         <bool>false</bool>
        </property>
        <property name="addEnabled">
         <bool>false</bool>
        </property>
        <property name="removeEnabled">
         <bool>false</bool>
        </property>
       </widget>
      </item>

      <!-- Segment row with combo + refresh -->
      <item row="1" column="0" colspan="2">
       <layout class="QHBoxLayout" name="hLayoutSegment">
        <item>
         <widget class="QLabel" name="labelWall">
          <property name="text">
           <string>Segment (Wall):</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QComboBox" name="wallSegmentCombo"/>
        </item>
        <item>
         <widget class="QPushButton" name="refreshSegsButton">
          <property name="text">
           <string>Refresh segments</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>

   <!-- Compute & Export -->
   <item>
    <widget class="ctkCollapsibleButton" name="computeCollapsibleButton">
     <property name="text">
      <string>Compute &amp; Export</string>
     </property>
     <layout class="QFormLayout" name="formLayout_compute">
      <item row="0" column="0">
       <widget class="QLabel" name="labelMinDiam">
        <property name="text">
         <string>Remove islands: % of BBox diagonal (0=off)</string>
        </property>
       </widget>
      </item>
      <item row="0" column="1">
       <widget class="ctkDoubleSpinBox" name="minDiamPctSpin">
        <property name="decimals">
         <number>1</number>
        </property>
        <property name="minimum">
         <double>0.000000000000000</double>
        </property>
        <property name="maximum">
         <double>100.000000000000000</double>
        </property>
        <property name="value">
         <double>10.000000000000000</double>
        </property>
       </widget>
      </item>

      <item row="1" column="0" colspan="2">
       <widget class="QCheckBox" name="removeUnrefCheck">
        <property name="text">
         <string>Remove unreferenced vertices (MeshLab-like)</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
       </widget>
      </item>

      <item row="2" column="0" colspan="2">
       <widget class="QCheckBox" name="poreDensityOuterCheck">
        <property name="text">
         <string>Use OUTER area for pore density (recommended)</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
       </widget>
      </item>

      <item row="3" column="0" colspan="2">
       <widget class="QPushButton" name="computeButton">
        <property name="text">
         <string>Compute metrics (mesh)</string>
        </property>
       </widget>
      </item>

      <item row="4" column="0" colspan="2">
       <widget class="QPushButton" name="exportButton">
        <property name="text">
         <string>Export HTML/CSV/JSON</string>
        </property>
       </widget>
      </item>

      <item row="5" column="0" colspan="2">
       <widget class="QPushButton" name="saveMeshButton">
        <property name="text">
         <string>Save cleaned mesh (.stl/.ply)</string>
        </property>
       </widget>
      </item>

      <item row="6" column="0" colspan="2">
       <widget class="QTextBrowser" name="outputBrowser">
        <property name="minimumHeight">
         <number>280</number>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>

   <!-- Thickness -->
   <item>
    <widget class="ctkCollapsibleButton" name="thicknessCollapsibleButton">
     <property name="text">
      <string>Shell thickness (medial, optional)</string>
     </property>
     <property name="collapsed">
      <bool>true</bool>
     </property>
     <layout class="QFormLayout" name="formLayout_thickness">
      <item row="0" column="0" colspan="2">
       <widget class="QCheckBox" name="thickEnableCheck">
        <property name="text">
         <string>Compute thickness (medial 2Ã—distance)</string>
        </property>
       </widget>
      </item>

      <item row="1" column="0">
       <widget class="QLabel" name="labelVoxel">
        <property name="text">
         <string>Voxel (mm):</string>
        </property>
       </widget>
      </item>
      <item row="1" column="1">
       <widget class="ctkDoubleSpinBox" name="thickVoxelSpin">
        <property name="decimals">
         <number>6</number>
        </property>
        <property name="minimum">
         <double>0.000100000000000</double>
        </property>
        <property name="maximum">
         <double>5.000000000000000</double>
        </property>
        <property name="value">
         <double>0.003000000000000</double>
        </property>
       </widget>
      </item>

      <item row="2" column="0" colspan="2">
       <widget class="QPushButton" name="genThickButton">
        <property name="text">
         <string>Generate map (mesh colormap)</string>
        </property>
       </widget>
      </item>

      <item row="3" column="0" colspan="2">
       <widget class="QPushButton" name="expThickButton">
        <property name="text">
         <string>Export map (NRRD)</string>
        </property>
       </widget>
      </item>

      <item row="4" column="0" colspan="2">
       <widget class="QPushButton" name="showThickButton">
        <property name="text">
         <string>Show map in slices</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>

   <!-- Status + spacer -->
   <item>
    <widget class="QLabel" name="statusLabel">
     <property name="text">
      <string/>
     </property>
    </widget>
   </item>
   <item>
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>

  </layout>
 </widget>

<customwidgets>
  <customwidget>
    <class>qMRMLNodeComboBox</class>
    <extends>QWidget</extends>
    <header>qMRMLNodeComboBox.h</header>
  </customwidget>
  <customwidget>
    <class>qMRMLWidget</class>
    <extends>QWidget</extends>
    <header>qMRMLWidget.h</header>
    <container>1</container>
  </customwidget>
  <customwidget>
    <class>ctkCollapsibleButton</class>
    <extends>QWidget</extends>
    <header>ctkCollapsibleButton.h</header>
    <container>1</container>
  </customwidget>
  <customwidget>
    <class>ctkDoubleSpinBox</class>
    <extends>QWidget</extends>
    <header>ctkDoubleSpinBox.h</header>
  </customwidget>
</customwidgets>


 <resources/>
 <connections>
  <connection>
   <sender>Measures</sender>
   <signal>mrmlSceneChanged(vtkMRMLScene*)</signal>
   <receiver>segSelector</receiver>
   <slot>setMRMLScene(vtkMRMLScene*)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>122</x>
     <y>132</y>
    </hint>
    <hint type="destinationlabel">
     <x>248</x>
     <y>61</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
